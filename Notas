#Instalar openFoam
https://openfoam.org/download/4-1-source/

#Cargar el entorno de OpenFoam
source /home/carlos/OpenFOAM/OpenFOAM-4.0/etc/bashrc

#Ir al directorio de openFOAM
#https://openfoam.org/download/4-1-source/

#mods de bins y libs
https://cfd.direct/openfoam/user-guide/compiling-applications/

cd $FOAM_RUN
cp -r $FOAM_INST_DIR/OpenFOAM-4.0/applications/utilities/mesh/conversion/foamToStarMesh .
cd foamToStarMesh
wmake

cp -r $FOAM_INST_DIR/OpenFOAM-4.0/applications/utilities/mesh/conversion/foamToStarMesh

#Clases relacionadas con el mallado:    https://cpp.openfoam.org/v4/
cellShape #"Forma" de las celdas
primitiveMesh # Cell-face mesh analysis engine3
polyMesh #Mesh consisting of general polyhedral
fvMesh #

Archivos incluídos

  doxigen
    https://cpp.openfoam.org/v4/
    
  setRootCase.H
    $FOAM_INST_DIR/OpenFOAM-4.0/src/OpenFOAM/include/setRootCase.H
    https://github.com/OpenFOAM/OpenFOAM-4.x/blob/master/src/OpenFOAM/include/setRootCase.H

  createTime.H
    $FOAM_INST_DIR/OpenFOAM-4.0/src/OpenFOAM/include/createTime.H
    https://github.com/OpenFOAM/OpenFOAM-4.x/blob/master/src/OpenFOAM/include/createTime.H

  createPolyMesh.H:
    $FOAM_INST_DIR/OpenFOAM-4.0/src/OpenFOAM/include/createPolyMesh.H
    https://github.com/OpenFOAM/OpenFOAM-4.x/blob/master/src/OpenFOAM/include/createPolyMesh.H

  getTimeIndex.H ------> incluído en la msca carpeta que el conversor

  STARCDMeshWriter.C
    $FOAM_INST_DIR/OpenFOAM-4.0/src/conversion/meshWriter/starcd/STARCDMeshWriter.C
    https://github.com/OpenFOAM/OpenFOAM-4.x/blob/version-4.0/src/conversion/meshWriter/starcd/STARCDMeshWriter.C    
    
   $FOAM_INST_DIR/OpenFOAM-4.0/src/conversion/meshWriter/

  createPolyMesh.H
    $FOAM_INST_DIR/OpenFOAM-4.0/src/OpenFOAM/include/createPolyMesh.H
    https://github.com/OpenFOAM/OpenFOAM-4.x/blob/master/src/OpenFOAM/include/createPolyMesh.H
    
Cosas que quiero modificar e incluir

  foamToStarMesh
    $FOAM_INST_DIR/OpenFOAM-4.0/applications/utilities/mesh/conversion/foamToStarMesh
  STARCDMeshWriter.C
    $FOAM_INST_DIR/OpenFOAM-4.0/src/conversion/meshWriter/starcd

Archivos 

============
Objetivos: Cargar librerías de OpenFoam en el programa:
*-Copiar los códigos de ejemplo de starmesh
*-Compilarlos
*-Correrlos con el ejemplo del cubo
*-Modificar los nombres delos archivos para sentar las bases de todo
*-Compilar los nuevos archivos
*-Añadirlos a mercurial
-Comentar lo que he entendido del código
-Modificarlo para kiva4
*  -Escribir puntos
*  -Escribir celdas

 //- Return cell zone mesh, getCellTable() tiene cosas de cellzones. Se eliminó por si acaso me estaba afectando el código
 
    https://cfd.direct/openfoam/user-guide/mesh-description/    
  -Escribir tipos de cara de cada celda
    -Hacer refactoring para el cambio de caras de OFoam a Kiva4
    -Escribir en el formato de kiva4grid
  -Escribir tipos de volúmenes de cada celda
    -mirar las regiones de ofoam (ANOTAR ESO CUALDO LO VUELVA A VER)
*    -Volver al archivo original
*    -compilar y ejecutar el bicho original
*    -renombar el archivo de condiciones de frontera
*    -usarlo para ver qué pasó en la conversión normal
*  -Hacer prueba intermedia que compruebe puntos, celdas y caras
  -Hacer mallado de un cilindro en Salome
    -Discretizrlo y simularlo
  -Mallado de 1 cubo de 1 sólo elemento
*   -En salomé
*   -En kiva4grid
*  -Escribir el kiva4grid definitivo
   -Probar con eso:
*     -Están bien mapeados los Vértices ->NO
*     -Están bien mapeados las caras ->NO
*     -Están bien mapeados las cFrontera ->NPI
*  -Analizar las otras funciones donde se hace uso del mapeo
  -Echarle un ojo a lo de malla estructurada
*  -funciones map en ensightMesh.C -> Para las mallas
  -función inplaceRenumber en ensightMesh.C?
  
  -Hacer programa que conforme la hipótesis del orden de las celdas hexaedricas
*    -eliminar la dependencia de writemesh.h --> igual esta librería puede ser útil después.
*    -Hacer que use fvMesh en todo lado
    -Consultar cada una de caras mapeadas de las celdas
*    -Sacar el centroide de cada una de las caras mapeadas
*    -Restar al centroide de la celda al centroide de la cara
*    -Clasificar los valores positivos en cada eje como máximos y negativos como mínimos respecto a cada eje
*    -Basado en lo anterior, identificar caras posiciones de vértices
*      -Encontrar los vértices comunes a una cara
*      -Implementar == para los grupos de vértices hallados
*       -MODIFICAR ESO PARA QUE SÓLO USE LOS PTS DE CADA CELDA
*       -Modificar para que encuentre una colección de labels de puntos, en vez de ptos
       -Imprimir los labels de los ptos en el formato de KIVA
*          -Añadir formato de ptos de KIVA
*          -Añadir formato de caras de KIVA
*    -Mapear caras y vértices a posiciones de KIVA4
*    -imprimir lo que se mapeó
    -Hacer que el program escriba las condiciones de frontera
*      -Separar la función que crea posFaces: la que dice la posición de las caras
*      -Hacer que el programa de celdas funcione con posFaces separado
       -incorporar diccionario de CFrontera de KIVA4
       -Hacer que use el dicionario para poner las condiciones que son y ya
      -Limpiar la info que escribe de debugueo
*      -Usar posFaces para sacar los tipos de las caras
      -Probar de nuevo_
        -cubo de 1 elemento
*        -cubo de 4 elementos
    -LLAMAR A CAROLINA MUNERA PARA LA COSA ESA
    -Ver si se cumple el patrón para mallas diferentes
      -Malla de 1 elementos
*         -para las caras
*         -para los puntos
          -para las fronteras
      -Malla de 4 elementos
*         -para las caras
*         -para los puntos
          -para las fronteras
     -Cámara de Mauricio Rueda (hacer malla spray)
     -Tobera (con ideas de mallado alternativo)
     -Otras mallas estáticas

============

USO
./foamToKIVA4Mesh -scale 1
